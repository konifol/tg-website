#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞
"""

import requests
import json

def test_create_bot_page():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞"""
    
    base_url = "http://localhost:5002"
    
    print("=== –¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ ===")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞...")
    try:
        response = requests.get(f"{base_url}/create-bot")
        if response.status_code == 200:
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            content = response.text
            if '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–ª–æ–∫–æ–≤' in content:
                print("‚úÖ –°–µ–∫—Ü–∏—è '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–ª–æ–∫–æ–≤' –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print("‚ùå –°–µ–∫—Ü–∏—è '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–ª–æ–∫–æ–≤' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
            if '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–ª–æ–∫–æ–≤' in content:
                print("‚úÖ –°–µ–∫—Ü–∏—è '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–ª–æ–∫–æ–≤' –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print("‚ùå –°–µ–∫—Ü–∏—è '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–ª–æ–∫–æ–≤' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
            if 'drop-zone' in content:
                print("‚úÖ Drag & Drop –∑–æ–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print("‚ùå Drag & Drop –∑–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
        else:
            print(f"‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 5002")
        return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º API –±–ª–æ–∫–æ–≤
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –±–ª–æ–∫–æ–≤...")
    try:
        response = requests.get(f"{base_url}/api/bot-blocks")
        if response.status_code == 200:
            blocks = response.json()
            print(f"‚úÖ API –±–ª–æ–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ –±–ª–æ–∫–æ–≤: {len(blocks)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–ª–æ–∫–æ–≤
            expected_blocks = ['welcome', 'help', 'about', 'message', 'photo', 'inline_keyboard', 'reply_keyboard']
            found_blocks = list(blocks.keys())
            
            for block in expected_blocks:
                if block in found_blocks:
                    print(f"  ‚úÖ –ë–ª–æ–∫ '{block}' –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"  ‚ùå –ë–ª–æ–∫ '{block}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
        else:
            print(f"‚ùå API –±–ª–æ–∫–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API –±–ª–æ–∫–æ–≤: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞...")
    try:
        test_bot_data = {
            "name": "Test Bot",
            "token": "123456789:ABCdefGHIjklMNOpqrsTUVwxyz",
            "description": "Test bot for testing",
            "config": [
                {
                    "id": 0,
                    "type": "welcome",
                    "name": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
                    "icon": "fas fa-hand-wave",
                    "color": "primary",
                    "config": {
                        "message": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç."
                    }
                }
            ]
        }
        
        response = requests.post(
            f"{base_url}/api/create-bot",
            headers={'Content-Type': 'application/json'},
            data=json.dumps(test_bot_data)
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"  ID –±–æ—Ç–∞: {result.get('bot_id')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {result.get('error')}")
        else:
            print(f"‚ùå API —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
    
    print("\n=== –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===")
    return True

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞")
    print("=" * 50)
    
    success = test_create_bot_page()
    
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        print("–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ")